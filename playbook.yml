  - name: "Start instance"
    hosts: localhost
    connection: local
    gather_facts: false
    vars:
      ansible_connection: local
      aws_ec2_region: "us-east-1"
    tasks:
      - name: Gather information about all instances in AZ ap-southeast-2a
        amazon.aws.ec2_instance_info:
          filters:
            network-interface.addresses.private-ip-address: "{{ ip_address }}"
          region: "{{ aws_ec2_region }}"
        register: list_instances
      - name: Start the instance if not running
        delegate_to: localhost
        amazon.aws.ec2_instance:
          instance_ids: "{{ item.instance_id }}"
          region: "{{ aws_ec2_region }}"
          state: running
          wait: True
        with_items: "{{ list_instances.instances }}"
        register: result
      - debug:
          var: result
      - name: Wait for SSH to come up
        local_action: wait_for 
                      host={{ item.private_ip_address }} 
                      port=22 
                      state=started
        with_items: "{{ list_instances.instances }}"
        when: item.tags.OS == 'Linux' or item.tags.os == 'Linux'
      - name: Wait for WinRM to come up
        local_action: wait_for 
                      host={{ item.private_ip_address }} 
                      port=5985 
                      state=started
        with_items: "{{ list_instances.instances }}"
        when: item.tags.OS == 'Windows' or item.tags.os == 'Windows'
  - name: Playbook
    hosts: all
    become: yes
    gather_facts: no
    tasks:
      - name: Wait for system to become reachable
        ansible.builtin.wait_for_connection:

      - name: Gather facts for first time
        ansible.builtin.setup:

      - name: Get hostname
        shell: echo $HOSTNAME
        register: result
      - debug:
          var: result